# generated by fastapi-codegen:
#   filename:  juju_api.yml
#   timestamp: 2021-04-28T13:12:52+00:00

from __future__ import annotations

from typing import Any, Optional

from fastapi import FastAPI
from starlette.requests import Request

from .models import AccountInfo, NormalResponsesData, VoucherInfo

app = FastAPI(
    title='juju reimbursement system',
    version='1.0',
)


@app.put('/admin/account/accept', response_model=NormalResponsesData)
def put_admin_account_accept(account_id: str) -> NormalResponsesData:
    """
    accept everyone account application
    """
    pass


@app.put('/admin/account/close', response_model=NormalResponsesData)
def put_admin_account_close(account_id: str) -> NormalResponsesData:
    """
    close everyone account
    """
    pass


@app.get('/admin/account/pending', response_model=NormalResponsesData)
def get_admin_account_pending(
    start_page: int,
    page_size: int,
    role: Optional[str] = None,
    department: Optional[str] = None,
) -> NormalResponsesData:
    """
    get a list of user account application
    """
    pass


@app.put('/admin/account/reject', response_model=NormalResponsesData)
def put_admin_account_reject(account_id: str) -> NormalResponsesData:
    """
    reject everyone account application
    """
    pass


@app.post('/admin/login', response_model=NormalResponsesData)
def post_admin_login(body: AccountInfo) -> NormalResponsesData:
    """
    login admin account
    """
    pass


@app.post('/admin/logout', response_model=NormalResponsesData)
def post_admin_logout() -> NormalResponsesData:
    """
    logout admin account
    """
    pass


@app.put('/subadmin/account/accept', response_model=NormalResponsesData)
def put_subadmin_account_accept(account_id: str) -> NormalResponsesData:
    """
    accept a user account application belonging to this department
    """
    pass


@app.put('/subadmin/account/close', response_model=NormalResponsesData)
def put_subadmin_account_close(account_id: str) -> NormalResponsesData:
    """
    close a user account belonging to this department
    """
    pass


@app.get('/subadmin/account/pending', response_model=NormalResponsesData)
def get_subadmin_account_pending(
    start_page: int, page_size: int
) -> NormalResponsesData:
    """
    get a list of account application belonging to this department
    """
    pass


@app.put('/subadmin/account/reject', response_model=NormalResponsesData)
def put_subadmin_account_reject(account_id: str) -> NormalResponsesData:
    """
    reject a user account application belonging to this department
    """
    pass


@app.post('/subadmin/register', response_model=NormalResponsesData)
def post_subadmin_register(body: Any) -> NormalResponsesData:
    """
    register subadmin account
    """
    pass


@app.put('/subadmin/voucher/accept', response_model=NormalResponsesData)
def put_subadmin_voucher_accept(voucher_id: str) -> NormalResponsesData:
    """
    accept a voucher application belonging to this department
    """
    pass


@app.put('/subadmin/voucher/reject', response_model=NormalResponsesData)
def put_subadmin_voucher_reject(voucher_id: str) -> NormalResponsesData:
    """
    reject a voucher application belonging to this department
    """
    pass


@app.post('/user/login', response_model=NormalResponsesData)
def post_user_login(body: AccountInfo) -> NormalResponsesData:
    """
    login user account
    """
    pass


@app.post('/user/logout', response_model=NormalResponsesData)
def post_user_logout() -> NormalResponsesData:
    """
    logout user account
    """
    pass


@app.post('/user/register', response_model=NormalResponsesData)
def post_user_register(request: Request) -> NormalResponsesData:
    """
    register new user account
    """
    pass


@app.get('/user/voucher', response_model=NormalResponsesData)
def get_user_voucher(start_page: int, page_size: int) -> NormalResponsesData:
    """
    get a list of voucher
    """
    pass


@app.put('/user/voucher', response_model=NormalResponsesData)
def put_user_voucher(body: VoucherInfo) -> NormalResponsesData:
    """
    modify voucher info
    """
    pass


@app.post('/user/voucher', response_model=NormalResponsesData)
def post_user_voucher(body: VoucherInfo) -> NormalResponsesData:
    """
    add new voucher
    """
    pass
